{"title":"跨域","date":"2014-02-18T00:13:01.000Z","slug":"跨域","comments":true,"updated":"2019-03-14T07:10:24.961Z","content":"<p>15 ajax 封装<br>16 angu<br>17 react<br>18 项目 小程序</p>\n<h1 id=\"三种方法：\">三种方法：<a href=\"post/跨域#三种方法：\"></a></h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cls </span><br><span class=\"line\">(&quot;Access-Control-Allow-Origin&quot;:&quot;*&quot;）允许所有跨域访问，所以跨域访问成功。</span><br><span class=\"line\">无论访问是文档，还是js文件都可以实现跨域</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jsonp</span><br><span class=\"line\">jsonp原理 ： 动态添加&lt;script&gt;标签来调用服务器提供的js脚本</span><br><span class=\"line\"></span><br><span class=\"line\">---jsonp 与 ajax 有什么区别 ---</span><br><span class=\"line\"></span><br><span class=\"line\">ajax的核心是 ： 通过XmlHttpRequest获取非本页内容，</span><br><span class=\"line\">jsonp的核心 ： 动态添加&lt;script&gt;标签</span><br><span class=\"line\"></span><br><span class=\"line\">---为什么只能用get请求---</span><br><span class=\"line\">·动态的创建了一个全局方法，</span><br><span class=\"line\">·并且动态生成script标签，将script标签的src属性变为（接口地址?callback=动态生成方法的方法名）请求数据</span><br><span class=\"line\">·后台返回来的是一串数据用callback接收，返给浏览器，这样生成了假象的ajax，因此只能get</span><br><span class=\"line\"></span><br><span class=\"line\">### HTML里面放这个</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    this is index  server</span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">        function jsonpCallback(data)&#123;</span><br><span class=\"line\">            console.log(data,&apos;data&apos;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        let defaultStatus = &#123;callback:&quot;jsonpCallback&quot;&#125;</span><br><span class=\"line\">        function format(data)&#123;</span><br><span class=\"line\">            let temp = &quot;&quot;</span><br><span class=\"line\">            for(var params in data)&#123;</span><br><span class=\"line\">                temp +=  `$&#123;encodeURIComponent(params)&#125;=$&#123;encodeURIComponent(data[params])&#125;&amp;`</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return temp</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        function jsonp(url,data,opt=defaultStatus)&#123;</span><br><span class=\"line\">            oScript = document.createElement(&apos;script&apos;)</span><br><span class=\"line\">            let hasCallback = url.indexOf(&quot;callback&quot;)</span><br><span class=\"line\">            url += url.indexOf(&quot;?&quot;) == -1 ? &quot;?&quot; + format(data) : format(data) </span><br><span class=\"line\">            if(hasCallback == -1)&#123;</span><br><span class=\"line\">                url += `callback=$&#123;opt.callback&#125;`</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            oScript.setAttribute(&apos;src&apos;,url)</span><br><span class=\"line\">            </span><br><span class=\"line\">            document.body.appendChild(oScript)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        let url = &quot;http://localhost:3000&quot; </span><br><span class=\"line\">        let data = &#123;</span><br><span class=\"line\">            username:&apos;yl&apos;,</span><br><span class=\"line\">            password:&apos;666&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        let opt = &#123;</span><br><span class=\"line\">            callback:&apos;jsonpCallback&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        jsonp(url,data,opt)</span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// 此内容 放js 这是后台 用gulp 写的</span><br><span class=\"line\">const fs = require(&apos;fs&apos;) </span><br><span class=\"line\">const gulp = require(&apos;gulp&apos;) </span><br><span class=\"line\">const webserver = require(&apos;gulp-webserver&apos;) </span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(&apos;api&apos;,()=&gt;&#123;</span><br><span class=\"line\">    return gulp.src(&apos;.&apos;)</span><br><span class=\"line\">    .pipe(webserver(&#123;</span><br><span class=\"line\">        host:&apos;localhost&apos;,</span><br><span class=\"line\">        port:8000,</span><br><span class=\"line\">        middleware:(req,res)=&gt;&#123;</span><br><span class=\"line\">            const indexPage = fs.readFileSync(&quot;./index.html&quot;);</span><br><span class=\"line\">            res.end(indexPage)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">gulp.task(&apos;default&apos;,[&apos;api&apos;])</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">降域 （cookie 和 ifrema）主域必须相同</span><br><span class=\"line\">具体参考 ： https://github.com/annwvn/ky/tree/master/acom</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--为什么[会]跨域</span><br><span class=\"line\">∵ 不同服务器之间访问时，会出现跨域。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---为什么[要]跨域，</span><br><span class=\"line\">∵ 同源策略</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">----为什么有同源策略</span><br><span class=\"line\">∵ 为了保护数据，防止黑客入侵，浏览器的保护机制。</span><br></pre></td></tr></table></figure>\n<h2 id=\"最后补充小知识时间到了\">最后补充小知识时间到了<a href=\"post/跨域#最后补充小知识时间到了\"></a></h2><h3 id=\"JavaScript实现异步编程的方法\">JavaScript实现异步编程的方法<a href=\"post/跨域#JavaScript实现异步编程的方法\"></a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">回调函数</span><br><span class=\"line\"></span><br><span class=\"line\">事件监听</span><br><span class=\"line\"></span><br><span class=\"line\">发布/订阅</span><br><span class=\"line\"></span><br><span class=\"line\">Promises对象</span><br><span class=\"line\"></span><br><span class=\"line\">Async函数</span><br></pre></td></tr></table></figure>\n","prev":{"title":"ajax","slug":"ajax"},"link":"https://annwvn.github.io/yangliu.github.io/post/跨域/","toc":[{"title":"三种方法：","id":"三种方法：","index":"1","children":[{"title":"最后补充小知识时间到了","id":"最后补充小知识时间到了","index":"1.1","children":[{"title":"JavaScript实现异步编程的方法","id":"JavaScript实现异步编程的方法","index":"1.1.1"}]}]}]}