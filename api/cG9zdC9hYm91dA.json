{"title":"vue双向绑定","date":"2016-02-25T12:35:33.000Z","slug":"about","comments":true,"updated":"2019-02-26T10:27:48.661Z","content":"<h3 id=\"简单来说：有三个步骤\">简单来说：有三个步骤<a href=\"post/about#简单来说：有三个步骤\"></a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">observer  递归所有的属性 获取的属性添加到 Dep数组中</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">compuile  编译模板 判断相对应的节点变化，进行判断是元素节点还是文本节点。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wather  相当于订阅者,监听相对应的节点变化，原型上 有自身的update</span><br></pre></td></tr></table></figure>\n<p>来上代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">  &lt;title&gt;forvue&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;div id=&quot;app&quot;&gt;</span><br><span class=\"line\">        &lt;input type=&quot;text&quot; v-model=&quot;text&quot;&gt; </span><br><span class=\"line\">        &lt;br&gt;&#123;&#123; text &#125;&#125; &lt;br&gt;</span><br><span class=\"line\">        &lt;input type=&quot;text&quot; v-model=&quot;texts&quot;&gt; </span><br><span class=\"line\">        &lt;br&gt;&#123;&#123; texts &#125;&#125; &lt;br&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">    &lt;!-- 递归来获取所有的属性 --&gt;</span><br><span class=\"line\">        function observe(obj, vm) &#123;</span><br><span class=\"line\">            // console.log(vm,&apos;vm&apos;); </span><br><span class=\"line\">            // Vue &#123;data: &#123;…&#125;&#125; ----vm</span><br><span class=\"line\">            //---vm展开 以下---</span><br><span class=\"line\">            // data: &#123;text: &quot;hello world&quot;&#125;</span><br><span class=\"line\">            // text: &quot;hello world&quot;</span><br><span class=\"line\">            // get text: ƒ ()</span><br><span class=\"line\">            // set text: ƒ (newVal)</span><br><span class=\"line\">            // __proto__: Object</span><br><span class=\"line\"></span><br><span class=\"line\">            Object.keys(obj).forEach(function (key) &#123;</span><br><span class=\"line\">                defineReactive(vm, key, obj[key]);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        //获取和监听 触发事件时的值 数据劫持  Object.defineProperty()</span><br><span class=\"line\">        function defineReactive(obj, key, val) &#123;</span><br><span class=\"line\">            var dep = new Dep();</span><br><span class=\"line\">            // 响应式的数据绑定</span><br><span class=\"line\">            Object.defineProperty(obj, key, &#123;</span><br><span class=\"line\">                get: function () &#123;</span><br><span class=\"line\">                    // 添加订阅者watcher到主题对象Dep  【Dep是一个数组】</span><br><span class=\"line\">                    if (Dep.target) &#123;</span><br><span class=\"line\">                        dep.addSub(Dep.target); //dep挂载的addSub方法 为了添加watcher</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    return val;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                //相当于发布者</span><br><span class=\"line\">                set: function (newVal) &#123;</span><br><span class=\"line\">                    if (newVal === val) &#123;</span><br><span class=\"line\">                        return; </span><br><span class=\"line\">                    &#125; else &#123;</span><br><span class=\"line\">                        val = newVal;</span><br><span class=\"line\">                        // 作为发布者发出通知</span><br><span class=\"line\">                        dep.notify()                        </span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        function nodeToFragment(node, vm) &#123;</span><br><span class=\"line\">            var flag = document.createDocumentFragment() </span><br><span class=\"line\">            &lt;!-- document.createDocumentFragment()方法创建一个新空白的DocumentFragment对象。</span><br><span class=\"line\">            DocumentFragments是DOM节点。它们不是主DOM树的一部分。通常的用例是创建文档片段，将元素附加到文档片段，然后将文档片段附加到DOM树。在DOM树中，文档片段被其所有的子元素代替。 --&gt;</span><br><span class=\"line\">            var child;</span><br><span class=\"line\">            //此处while 循环 先判断 是否满足条件，满足就执行循环体内的语句,</span><br><span class=\"line\">            执行完毕后再回来判断条件是否满足，如此无限重复,直到条件不满足时，执行while循环后边的语句</span><br><span class=\"line\">            while (child = node.firstChild) &#123;</span><br><span class=\"line\">                //判断是否是文本节点 2</span><br><span class=\"line\">                compile(child, vm);</span><br><span class=\"line\">                flag.appendChild(child) // 将子节点劫持到文档片段中</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return flag;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        //compuile 模板编译</span><br><span class=\"line\">        function compile(node, vm) &#123;</span><br><span class=\"line\">            var reg = /\\&#123;\\&#123;(.*)\\&#125;\\&#125;/;</span><br><span class=\"line\"></span><br><span class=\"line\">            // 节点类型为元素  元素节点 1  属性节点 2</span><br><span class=\"line\">            if (node.nodeType === 1) &#123;</span><br><span class=\"line\">                var attr = node.attributes;</span><br><span class=\"line\">                // 解析属性</span><br><span class=\"line\">                for (var i = 0; i &lt; attr.length; i++) &#123;</span><br><span class=\"line\">                    if (attr[i].nodeName == &apos;v-model&apos;) &#123;</span><br><span class=\"line\">                        var name = attr[i].nodeValue; // 获取v-model绑属性名</span><br><span class=\"line\">                        //触发dom二级事件  input</span><br><span class=\"line\">                        node.addEventListener(&apos;input&apos;, function (e) &#123;</span><br><span class=\"line\">                            // 给相应的data属性赋值，进而触发属性的set方法</span><br><span class=\"line\">                            vm[name] = e.target.value;</span><br><span class=\"line\">                        &#125;)</span><br><span class=\"line\">                        node.value = vm[name]; // 将data的值赋值给该node</span><br><span class=\"line\">                        node.removeAttribute(&apos;v-model&apos;);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            // 节点类型为text</span><br><span class=\"line\">            if (none.nodeType === 3) &#123;</span><br><span class=\"line\">                if (reg.test(node.nodeValue)) &#123;</span><br><span class=\"line\">                    var name = RegExp.$1; // 获取匹配到的字符串</span><br><span class=\"line\">                    name = name.trim();</span><br><span class=\"line\">                    // node.nodeValue = vm[name]; // 将data的值赋值给该node</span><br><span class=\"line\">                    new Watcher(vm, node, name);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        //订阅者 有自身的update()</span><br><span class=\"line\">        function Watcher(vm, node, name) &#123;</span><br><span class=\"line\">            Dep.target = this;</span><br><span class=\"line\">            this.name = name;</span><br><span class=\"line\">            this.node = node;</span><br><span class=\"line\">            this.vm = vm;</span><br><span class=\"line\">            this.update();</span><br><span class=\"line\">            Dep.target = null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Watcher.prototype = &#123;</span><br><span class=\"line\">            update: function () &#123;</span><br><span class=\"line\">                this.get();</span><br><span class=\"line\">                this.node.nodeValue = this.value;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">            // 获取data中的属性值</span><br><span class=\"line\">            get: function () &#123;</span><br><span class=\"line\">                this.value = this.vm[this.name]; // 触发相应属性的get</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //数组 放的是整个 watcher 所包含的所有属性</span><br><span class=\"line\">        function Dep () &#123;</span><br><span class=\"line\">            this.subs = [];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Dep.prototype = &#123;</span><br><span class=\"line\">            addSub: function (sub) &#123;</span><br><span class=\"line\">                this.subs.push(sub);</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            //发布</span><br><span class=\"line\">            notify: function () &#123;</span><br><span class=\"line\">                this.subs.forEach(function (sub) &#123;</span><br><span class=\"line\">                    sub.update();</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        function Vue(options) &#123;</span><br><span class=\"line\">            this.data = options.data;</span><br><span class=\"line\">            var data = this.data;</span><br><span class=\"line\">            observe(data, this);</span><br><span class=\"line\">            var id = options.el;</span><br><span class=\"line\">            var dom = nodeToFragment(document.getElementById(id), this);</span><br><span class=\"line\">            </span><br><span class=\"line\">            // 编译完成后，将dom返回到app中。</span><br><span class=\"line\">            document.getElementById(id).appendChild(dom);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        var vm  = new Vue(&#123;</span><br><span class=\"line\">            el: &apos;app&apos;,</span><br><span class=\"line\">            data: &#123;</span><br><span class=\"line\">                text: &apos;hello world&apos;,</span><br><span class=\"line\">                texts: &apos;加油&apos;,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/script&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n","prev":{"title":"安雯","slug":"hello-world"},"next":{"title":"Generator 异步编程解决方案","slug":"Generator"},"link":"https://annwvn.github.io/yangliu.github.io/post/about/"}